name: Build on Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python (if needed)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set Vulkan SDK version
      id: vulkan_version
      run: echo "VULKAN_SDK_VERSION=1.3.280.0" >> $env:GITHUB_ENV

    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v4
      with:
        path: C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}
        key: windows-vulkan-${{ env.VULKAN_SDK_VERSION }}

    - name: Download and Install Vulkan SDK
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      run: |
        curl -LO "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe"
        Start-Process -Wait -FilePath .\VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe -ArgumentList "/S"

    - name: Add Vulkan SDK to PATH
      run: |
        echo "C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}\Lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}\Include" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # Your build steps go here, for example:
    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build --config Release

    # Add additional test/deploy steps as needed
